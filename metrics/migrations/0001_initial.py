# Generated by Django 3.0.2 on 2021-10-01 22:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='Name')),
                ('derived', models.IntegerField(default=0, verbose_name='Derived')),
                ('is_ignored', models.BooleanField(default=False, verbose_name='Is Ignored')),
            ],
            options={
                'verbose_name': 'channel',
                'verbose_name_plural': 'channels',
            },
        ),
        migrations.CreateModel(
            name='ComputeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=8, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_calibration', models.BooleanField(default=False, verbose_name='Is Calibration')),
            ],
            options={
                'verbose_name': 'compute type',
                'verbose_name_plural': 'compute types',
            },
        ),
        migrations.CreateModel(
            name='Custom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=40, verbose_name='User_id')),
            ],
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'date',
                'verbose_name_plural': 'dates',
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_time', models.DateTimeField(verbose_name='Error Time')),
                ('error_message', models.TextField(verbose_name='Message')),
            ],
            options={
                'verbose_name': 'error log',
                'verbose_name_plural': 'error logs',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=36, unique=True, verbose_name='Name')),
                ('is_ignored', models.BooleanField(default=False, verbose_name='Is Ignored')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
            },
        ),
        migrations.CreateModel(
            name='GroupType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'group type',
                'verbose_name_plural': 'group types',
            },
        ),
        migrations.CreateModel(
            name='Hash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash', models.BinaryField(unique=True, verbose_name='Hash')),
            ],
            options={
                'verbose_name': 'hash',
                'verbose_name_plural': 'hashes',
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name')),
                ('display_name', models.CharField(blank=True, max_length=64, verbose_name='Display Name')),
                ('description_short', models.CharField(blank=True, max_length=128, verbose_name='Short Description')),
                ('description_long', models.TextField(blank=True, verbose_name='Long Description')),
                ('compute_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='metrics.ComputeType')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='metrics.Metric')),
            ],
            options={
                'verbose_name': 'metric',
                'verbose_name_plural': 'metrics',
            },
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Update')),
                ('metric_filter', models.TextField(verbose_name='Metric Filter')),
                ('network_filter', models.TextField(verbose_name='Network Filter')),
                ('station_filter', models.TextField(verbose_name='Station Filter')),
                ('location_filter', models.TextField(verbose_name='Location Filter')),
                ('channel_filter', models.TextField(verbose_name='Channel Filter')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('priority', models.IntegerField(default=10, verbose_name='Priority')),
                ('delete_existing', models.BooleanField(default=False, verbose_name='Delete Exisiting')),
                ('scheduled_run', models.DateField(verbose_name='Scheduled Run Date')),
                ('finished', models.BooleanField(default=False, verbose_name='Scan Finished')),
                ('taken', models.BooleanField(default=False, verbose_name='Scan Taken')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='metrics.Scan')),
            ],
            options={
                'verbose_name': 'scan',
                'verbose_name_plural': 'scans',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='Name')),
                ('groups', models.ManyToManyField(to='metrics.Group')),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='station_network', to='metrics.Group')),
            ],
            options={
                'verbose_name': 'station',
                'verbose_name_plural': 'stations',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=16, verbose_name='Location')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='metrics.Station')),
            ],
            options={
                'verbose_name': 'sensor',
                'verbose_name_plural': 'sensors',
            },
        ),
        migrations.CreateModel(
            name='ScanMessage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('network', models.CharField(max_length=2, verbose_name='Network')),
                ('station', models.CharField(max_length=10, verbose_name='Station')),
                ('location', models.CharField(max_length=10, verbose_name='Location')),
                ('channel', models.CharField(max_length=10, verbose_name='Channel')),
                ('metric', models.CharField(max_length=50, verbose_name='Metric')),
                ('message', models.TextField(verbose_name='Message')),
                ('timestamp', models.DateTimeField(auto_now=True, verbose_name='Timestamp')),
                ('scan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='metrics.Scan')),
            ],
            options={
                'verbose_name': 'scan message',
                'verbose_name_plural': 'scan messages',
            },
        ),
        migrations.CreateModel(
            name='MetricData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='Date')),
                ('value', models.FloatField(verbose_name='Value')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='metrics.Channel')),
                ('hash', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='metrics.Hash')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='metrics.Metric')),
            ],
            options={
                'verbose_name': 'metric data',
                'verbose_name_plural': 'metric data',
            },
        ),
        migrations.AddIndex(
            model_name='hash',
            index=models.Index(fields=['id', 'hash'], name='metrics_has_id_6280f4_idx'),
        ),
        migrations.AddField(
            model_name='group',
            name='group_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='metrics.GroupType'),
        ),
        migrations.AddIndex(
            model_name='date',
            index=models.Index(fields=['id', 'date'], name='metrics_dat_id_df717e_idx'),
        ),
        migrations.AddField(
            model_name='custom',
            name='columns',
            field=models.ManyToManyField(to='metrics.Metric'),
        ),
        migrations.AddField(
            model_name='channel',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='metrics.Sensor'),
        ),
        migrations.AlterUniqueTogether(
            name='station',
            unique_together={('name', 'network')},
        ),
        migrations.AddIndex(
            model_name='sensor',
            index=models.Index(fields=['id', 'station'], name='metrics_sen_id_b34292_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sensor',
            unique_together={('station', 'location')},
        ),
        migrations.AddIndex(
            model_name='metricdata',
            index=models.Index(fields=['date', 'channel'], name='metrics_met_date_23388e_idx'),
        ),
        migrations.AddIndex(
            model_name='metricdata',
            index=models.Index(fields=['metric', 'date', 'channel', 'value'], name='metrics_met_metric__f0fcc5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('group_type', 'name')},
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['id', 'sensor', 'is_ignored'], name='metrics_cha_id_86c09e_idx'),
        ),
    ]
